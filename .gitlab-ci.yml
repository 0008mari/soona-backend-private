image: docker:20.10

service:
  - docker:dind

variables:
  DOCKER_REGISTRY: 986249049395.dkr.ecr.ap-northeast-2.amazonaws.com
  APP_NAME: soona
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

stages:
  - build
  - test
  - publish
  - deploy

build:
  image: gradle:alpine
  # gradle 버전 확인 
  stage: build
  only: master
  script:
    - ./gradlew clean
    - ./gradlew build
    - echo "build start"
    - docker build -t soona:latest .
  artifacts:
    paths:
      - build/libs/*.jar
      expire_in: 1 day
  only:
    - master
  
test:
  stage: test
  script:
    - echo "pass"
  only:
    - master
  # 일단 생략

publish:
  # upload to ecr
  stage: publish
  before_script:
    - ntpd -q -p time.nist.gov
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - aws --version
    - docker info
    - docker --version
  script:
    - docker tag soona:latest $DOCKER_REGISTRY/$APP_NAME:latest
    - docker push $DOCKER_REGISTRY/$APP_NAME:latest
  only:
    - master

deploy:
  stage: publish
  variables:
    TASK_DEFINITION_NAME: soona-backend-task
    CLUSTER_NAME: soona-cluster
    SERVICE_NAME: soona-backend-task-service
  before_script:
    - ntpd -q -p time.nist.gov
    - apk add --no-cache curl jq python py-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - aws --version
    - docker info
    - docker --version
  script:
    - echo $DOCKER_REGISTRY/$APP_NAME:latest
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$TASK_DEFINITION_NAME" --region "${AWS_DEFAULT_REGION}")
    - NEW_CONTAINER_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$REPOSITORY_URL:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --family "${TASK_DEFINITION_NAME}" --requires-compatibilities FARGATE --cpu 256 --region $AWS_REGION
    - echo "Updating the service..."
    - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $TEST_DEFINITION_NAME --region $AWS_REGION
  only:
    master